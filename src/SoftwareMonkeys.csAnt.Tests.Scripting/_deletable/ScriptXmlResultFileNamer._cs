using System;
using System.IO;
using System.Collections.Generic;

namespace SoftwareMonkeys.csAnt.Tests.Scripting
{
    public class ScriptXmlResultFileNamer
    {
        public string GetXmlFileName (ITestScript script)
        {
            if (script.IsVerbose) {
                Console.WriteLine ("");
                Console.WriteLine ("Getting XML file path...");
                Console.WriteLine ("Current dir:");
                Console.WriteLine (script.CurrentDirectory);
                Console.WriteLine ("");
            }

            if (String.IsNullOrEmpty(script.TimeStamp))
                throw new Exception("The script.TimeStamp property must be set.");

            var filePath = script.CurrentDirectory
                + Path.DirectorySeparatorChar
                + "tests"
                + Path.DirectorySeparatorChar
                + "results"
                + Path.DirectorySeparatorChar
                + "scripts"
                + Path.DirectorySeparatorChar
                + script.TimeStamp
                + Path.DirectorySeparatorChar
                + "xml";

            filePath = AddGroupPath(script, filePath);
            
            filePath += Path.DirectorySeparatorChar
                + script.ScriptName
                + ".xml";

            return filePath;
        }

        public string AddGroupPath(ITestScript script, string filePath)
        {
            foreach (string s in GetTestScriptStack(script)) {
                if (s != script.ScriptName)
                {
                    filePath += Path.DirectorySeparatorChar
                        + s;
                }
            }

            return filePath;
        }

        public string GetXmlResultsDirectory(ITestScript script)
        {
            return script.CurrentDirectory
                + Path.DirectorySeparatorChar
                + "tests"
                + Path.DirectorySeparatorChar
                + "results"
                + Path.DirectorySeparatorChar
                + "scripts"
                + Path.DirectorySeparatorChar
                + script.TimeStamp
                + Path.DirectorySeparatorChar
                + "xml";
        }
        
        public Stack<string> GetTestScriptStack(ITestScript script)
        {
            // TODO: Inject via constructor
            var detector = new TestScriptStackDetector(script);

            return detector.Detect();
        }
    }
}

